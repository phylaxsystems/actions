name: "TypeScript Base CI"

on:
  workflow_call:
    inputs:
      node-version:
        description: "Node.js version to use"
        type: string
        default: "22.x"
      package-manager:
        description: "Package manager to use (npm, yarn, or pnpm)"
        type: string
        default: "pnpm"
      install-command:
        description: "Custom install command if needed"
        type: string
        default: "install"
      typecheck-command:
        description: "Command to run typechecking"
        type: string
        default: "typecheck"
      lint-command:
        description: "Command to run linting"
        type: string
        default: "lint"
      format-check-command:
        description: "Command to check formatting"
        type: string
        default: "format"
      test-command:
        description: "Command to run tests"
        type: string
        default: "test"
      run-tests:
        description: "Whether to run tests"
        type: boolean
        default: false
    secrets:
      TEST_JWT_SECRET:
        description: "JWT secret for token signing/verification"
        required: true
      TEST_IRON_SESSION_SECRET:
        description: "Iron session secret for session management"
        required: true
      TEST_SUPABASE_ANON_KEY:
        description: "Supabase anonymous key"
        required: true

jobs:
  quality:
    name: Quality Checks
    runs-on: ubuntu-latest

    env:
      # Set secrets as environment variables if provided
      JWT_SECRET: ${{ secrets.TEST_JWT_SECRET }}
      IRON_SESSION_SECRET: ${{ secrets.TEST_IRON_SESSION_SECRET }}
      SUPABASE_URL: "http://127.0.0.1:54321"
      SUPABASE_ANON_KEY: ${{ secrets.TEST_SUPABASE_ANON_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: Setup pnpm
        if: inputs.package-manager == 'pnpm'
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Get package manager cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.pnpm-store
            ~/.npm
            ~/.yarn
          key: ${{ runner.os }}-${{ inputs.package-manager }}-${{ hashFiles('**/package-lock.json', '**/pnpm-lock.yaml', '**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ inputs.package-manager }}-

      - name: Install dependencies
        run: ${{ inputs.package-manager }} ${{ inputs.install-command }}

      - name: Run typecheck
        run: ${{ inputs.package-manager }} run ${{ inputs.typecheck-command }}

      - name: Run linting
        run: ${{ inputs.package-manager }} run ${{ inputs.lint-command }}

      - name: Check formatting
        run: ${{ inputs.package-manager }} run ${{ inputs.format-check-command }}

      - name: Run tests
        if: inputs.run-tests
        env:
          # Ensure environment variables are available during test execution
          JWT_SECRET: ${{ secrets.TEST_JWT_SECRET }}
          IRON_SESSION_SECRET: ${{ secrets.TEST_IRON_SESSION_SECRET }}
          SUPABASE_URL: "http://127.0.0.1:54321"
          SUPABASE_ANON_KEY: ${{ secrets.TEST_SUPABASE_ANON_KEY }}
        run: ${{ inputs.package-manager }} run ${{ inputs.test-command }}
